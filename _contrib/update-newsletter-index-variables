#!/bin/bash -eu

## Update the list of variables that point to each newsletter.  Must be
## run from the top-level directory in the repository.  Update yearly to
## create variables for all that year's newsletters.  Also requires
## updating for schedule changes.
#
## It's probably best if everything is done in chronolical order

OUTPUT=_includes/linkers/newsletters.md
if ! [ -f "$OUTPUT" ]
then
  echo "Error: $OUTPUT not found.  You must run $0 from the top-level repository directory."
  exit 1
fi

## Generate a list of newsletters a week apart starting from particular
## date and issue number
_seq_news() {
  start_date="$1"
  start_issue="$2"
  count="$(( $3 - 1 ))"
  for i in $( seq 0 $count )
  do
    issue_number=$(( start_issue + i ))
    issue_date=$( date +%Y/%m/%d -d "$start_date +$((i*7)) days")
    echo '{% assign news'$issue_number' = "/en/newsletters/'$issue_date'/" %}'
    echo "[Newsletter #${issue_number}]: {{news${issue_number}}}"
  done
}

## Write all stdout to the output file.  stderr will still be printed to the controling console
exec > $OUTPUT
echo '''{% comment %}<!-- WARNING: DO NOT MANUALLY EDIT THIS FILE.
                        Edit _contrib/update-newsletter-index-variables instead -->{% endcomment %}'''

## Original PoC newsletter
_seq_news 2018-06-08 0 1
## Start regular publication
_seq_news 2018-06-26 1 26
## Christmas special
_seq_news 2018-12-28 27 1
## Resume regular publication
_seq_news 2019-01-08 28 47
## New Wednesday publication
_seq_news 2019-05-29 48 30
