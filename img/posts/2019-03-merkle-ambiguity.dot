//[version|prev_hash|merkle_root|nBits|nTime|nonce]
//                         |
//            0xABCD...ABCD                    0xABCD...ABCD
//                  |                                 |
//                <hash>                            <hash>
//                  |                                 |
//         [64-byte transaction]           [32-byte] || [32-byte]
//                                             |             |
//                                         [tx0]           [tx1]

digraph merkle_ambiguity {

rankdir=BT;
ranksep=0.3;
//splines=ortho;

node [ shape = "box" ];

subgraph cluster_invalid {
  root0 [label = "e5e7...c429" ]
  tx64 [label = "????????01??????????????????????\n????????????????????????????????\n??????????????????00????????01??\n??????????????04????????????????" ]
  hashop0 [shape = "diamond", label = "sha256d", fontsize = "12" ];

  {
    //padding nodes
    node [style = "invis" ];
    edge [style = "invis" ];
    invis0 -> invis1 -> invis2 -> invis3 -> tx64;
  }
  {
    //label nodes
    node [shape = "none" ];
    edge [style = "invis" ];
    labelb2 -> labelb3 -> labelb4 -> labelb5 -> labelb6 -> labelb7 -> labelb8;
    labelb2 [ style = "invis" ];
    labelb3 [ style = "invis" ];
    labelb4 [ style = "invis" ];
    labelb5 [ style = "invis" ];
    labelb6 [ label = "Fake 64-byte\ntransaction" ];
    labelb7 [ style = "invis" ];
    labelb8 [ label = "Merkle root" ];

  }

  label = "Merkle tree referencing an invalid transaction"

}

subgraph cluster_valid {
  {
    //label nodes
    node [shape = "none" ];
    edge [style = "invis" ];
    label2 -> label3 -> label4 -> label5 -> label6 -> label7 -> label8;
    label2 [ label = "Valid transactions" ];
    label3 [ style = "invis" ];
    label4 [ label = "Txids for\nvalid txes" ];
    label5 [ style = "invis" ];
    label6 [ label = "Legitimate 64-byte\npreimage\ncontaining two txids" ];
    label7 [ style = "invis" ];
    label8 [ label = "Merkle root" ];

  }
  tx1 [label = "0200...1234" ];
  txid1 [label = "??????????????????00????????01??\n??????????????04????????????????" ]
  hashop2 [shape = "diamond", label = "sha256d", fontsize = "12" ];
  root1 [label = "e5e7...c429" ]

  tx0 [label = "0100...cdef" ];
  txid0 [label = "????????01??????????????????????\n????????????????????????????????" ]
  hashop1 [shape = "diamond", label = "sha256d", fontsize = "12" ];
  intermediate [label = "????????01??????????????????????\n????????????????????????????????\n??????????????????00????????01??\n??????????????04????????????????" ]

  hashop3 [shape = "diamond", label = "sha256d", fontsize = "12" ];

  concat [shape = "diamond", label = "concatenate", fontsize = "12" ];

  label = "Merkle tree referencing two valid transactions"

}

tx64 -> hashop0 -> root0;
tx0 -> hashop1 -> txid0 -> concat;
tx1 -> hashop3 -> txid1 -> concat;
concat -> intermediate -> hashop2 -> root1;

label = "The same merkle root derived from two different sets of transactions.  Based on research by Suhas Daftuar"

}
                  

